>. set hive.cli.print.current.db=true;
>. set hive.cli.print.header=true;
>. set hive.enforce.bucketing=true;
>. set hive.exec.dynamic.partition.mode=nonstrict
>. set hive.exec.dynamic.partition=true;

>> DDL commands- create, show, describe, use, alter, drop, truncate
>> DML commands- load, insert.

>> create statement-
 
>. create table tbl_name(col_name data_type) row format delimited fields terminated by ',';
>  create table tbl_name(col_name data_type) row format delimited fields terminated by ',' stored as textfile|sequencefile|RCfile|ORCfile|parquet;
>. load data local inpath('pathname/filename') into table table_name;
>. insert into tbl_name select * from table_name;
>. insert overwrite table tbl_name select * from tbl2;
>. insert overwrite table tbl_name if not exists select * from tbl2;

>> partitioning-

>. create table tbl_name(cl dt1,c2 dt2) partitioned by(c3 dt3) row format delimited fields terminated by ',';
>. insert into tbl_name(cl1,cl2) partition(cl3) select cl1,cl2,cl3 from tab2;

>> bucketing-

>. create table tbl_name(cl dt1,c2 dt2) partitioned by(c3 dt3) clustered by (c1) into n buckets row format delimited fields terminated by ',';
>. insert into tbl_name(cl1,cl2) partition(cl3) select cl1,cl2,cl3 from tab2;

>> alter-

> rename a table- alter table old_tbl_name rename to new_tbl_name;
> add a column- alter table tbl_name add columns (cln_name data_type);
> rename a column- alter table tbl_name change old_column_name new_column_name data_type;
> drop a column- -- we can't directly drop the columns. instead of that we have to use replace columns with the alter statement with the remaining columns.
		alter table tbl_name replace columns(c1 d1,c2 d2);
> drop database- drop database db_name;
> add a partition- alter table tbl_name add partition(cl dt1);
> rename a partition- alter table tbl_name partition(old_partition_name) rename to (new partition name);
> drop a partition- alter table tbl_name drop partition(partition_name);


